#!/bin/bash
clear
#--------[ ZoroZoro ]-----------#
source ShellBot.sh
touch lista
[[ -z $1 ]] && {
    clear && echo "INFORME O TOKEN DO BOT" && return 0
}
# Informa√ß√µes Server 2
ip_server2="SEU-IP-AQUI"
senha_server2="SUA-SENHA-AQUI"
# Informa√ß√µes Server 3
ip_server3="SEU-IP-AQUI"
senha_server3="SUA-SENHA-AQUI"
[[ ! -e RESET ]] && touch RESET
api_bot=$1
ShellBot.init --token "$api_bot" --monitor --flush
ShellBot.username

# - Funcao menu
menu() {
    local msg
        msg="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="‚úåÔ∏èüòÉ Hola <b>${message_from_first_name[$id]}</b>, Bienvenido (a)!\n"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="<b>CREA SU USUARIO DE 5 HORAS GR√ÅTIS</b>\n\n"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚≠ê <b>BENEFICIOS</b> ‚≠ê‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="‚úÖ PRUEBA SIN COMPROMISO \n"
        msg+="‚úÖ BIEN ECON√ìMICO \n"
        msg+="‚úÖ NAVEGACI√ìN PRIVADA \n"
        msg+="‚úÖ SIN PENALIZACI√ìN \n"
        msg+="‚úÖ SIN CONTRAT√ì \n"
        msg+="‚úÖ FUNCIONA CON APLICACI√ìN \n"
        msg+="‚úÖ SERVIDOR DE ALTA VELOCIDAD.\n"
        msg+="‚úÖ <b>TR√ÅFICO ILIMITADO</b>\n"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="<b>üî¥CLARO üü£ENTEL üîµMOVISTAR üü°BITEL</b>\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard1" \
        --parse_mode html
        ShellBot.sendPhoto --chat_id ${message_chat_id[$id]} \
        --photo "@/root/imagem.jpg" \
        return 0
}

# - funcao criar ssh
criarteste() {
    [[ $(grep -wc ${callback_query_from_id} lista) != '0' ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "‚ùå Acceso negado, verifique la hora de su √∫ltima creaci√≥n, puede crear una prueba gratuita cada 24 horas."
      return 0
    }
    usuario=$(echo MSC$(( RANDOM% + 999 )))
    senha='12345h'
    limite='1'
    tempo='24'
    tuserdate=$(date '+%C%y/%m/%d' -d " +31 days")
    useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
    chmod +x /etc/SSHPlus/userteste/$usuario.sh
    at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
    echo ${callback_query_from_id} >> lista
    # - ENVIA O SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n        ‚úÖ Creado con √âxito ‚úÖ\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n       üåê IP: 172.81.41.210\n      üåê CLOUDFLARE: <code>claro3.mscperu.store</code>\n      üë§ USUARIO: <code>$usuario</code>\n      üîë CONTRASE√ëA: <code>$senha</code>\n      ‚è∞ Expira en: $tempo Dias"\n           ‚úíÔ∏è SSL PYTHON: 443"\n           ‚úíÔ∏è SOCKS PYTHON: 80"\n           ‚úíÔ∏è DROPBEAR: 8080"\n           ‚úíÔ∏è BadVPN: 7300 7400"\n           ‚úíÔ∏è SQUIP3: 3128")\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n   ‚ÑπÔ∏è COMO CONECTAR A INTERNET\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚Ä¢ Abre la aplicaci√≥n que instalaste.\n‚Ä¢ Seleccione su operador.\n‚Ä¢ Escribe tu usuario y contrase√±a en la aplicaci√≥n.\n‚Ä¢ Activar datos m√≥viles y desactivar Wifi\n‚Ä¢ Click en Conectar.\n‚Ä¢ Debe aparecer CONECTADO.\n‚Ä¢ si te aparecio ve a youtube y hazte la prueba.\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n   ‚ö†Ô∏è DISFRUTA TU USUARIO GRATIS\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨" \
    --parse_mode html
    return 0
}

# - funcao criar ssh 2
criarteste2() {
   [[ $(grep -wc ${callback_query_from_id} lista) != '0' ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "‚ùå Acesso negado, verifique o hor√°rio da sua √∫ltima cria√ß√£o, voc√™ pode criar teste gr√°tis a ada 24 horas. !"
      return 0
    }
    usuario=$(echo teste$(( RANDOM% + 250 )))
    senha=$((RANDOM% + 99999))
    limite='1'
    tempo='1'
    tuserdate=$(date '+%C%y/%m/%d' -d " +1 days")
    if sshpass -p "$senha_server2" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server2 echo "ok" 1>/dev/null 2>/dev/null; then
        sshpass -p "$senha_server2" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server2 << EOF
        useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
chmod +x /etc/SSHPlus/userteste/$usuario.sh
at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
EOF
    echo ${callback_query_from_id} >> lista
    # - ENVIA O SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "‚úÖ <b>Criado com sucesso</b> ‚úÖ\n\nIP: $ip_server2\nUSUARIO: <code>$usuario</code>\nSENHA: <code>$senha</code>\n\n‚è≥ Expira em: $tempo Hora")" \
    --parse_mode html
    return 0
else
ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e Erro Tente novamente Mais tarde!)" \
    --parse_mode html
    return 0
fi
}

# - funcao criar ssh 3
criarteste3() {
    [[ $(grep -wc ${callback_query_from_id} lista) != '0' ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "‚ùå Acesso negado, verifique o hor√°rio da sua √∫ltima cria√ß√£o, voc√™ pode criar teste gr√°tis a ada 24 horas. !"
      return 0
    }
    usuario=$(echo teste$(( RANDOM% + 250 )))
    senha=$((RANDOM% + 99999))
    limite='1'
    tempo='1'
    tuserdate=$(date '+%C%y/%m/%d' -d " +1 days")
    if sshpass -p "$senha_server3" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server3 echo "ok" 1>/dev/null 2>/dev/null; then
        sshpass -p "$senha_server3" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server3 << EOF
        useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
chmod +x /etc/SSHPlus/userteste/$usuario.sh
at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
EOF
    echo ${callback_query_from_id} >> lista
    # - ENVIA O SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "‚úÖ <b>Creado con exito</b> ‚úÖ\n\nIP: $ip_server3\nUSUARIO: <code>$usuario</code>\nCONTRASE√ëA: <code>$senha</code>\n\n‚è≥ Expira en: $tempo Hora")" \
    --parse_mode html
    return 0
else
ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e Error intentar Mas tarde!)" \
    --parse_mode html
    return 0
fi
}

#enviar app
enviarapp() {
    ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
        --text "‚ôªÔ∏è RECIBIENDO APLICACION..."
    ShellBot.sendDocument --chat_id ${callback_query_message_chat_id} \
        --document "@/root/VPNPERU.apk" \
    return 0
    
}

#enviar video 1
tutorial1() {
    ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
        --text "‚ôªÔ∏è RECIBIENDO EL VIDEO..."
    ShellBot.sendDocument --chat_id ${callback_query_message_chat_id} \
        --document "@/root/BOT/tutorial1.mp4" \
    return 0
    
}

#informacoes usuario
infouser () {
    ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
    --text "$(echo -e "Nome:  ${message_from_first_name[$(ShellBot.ListUpdates)]}\nUser: @${message_from_username[$(ShellBot.ListUpdates)]:-null}")\nID: ${message_from_id[$(ShellBot.ListUpdates)]} " \
    --parse_mode html
    return 0
}

unset botao1
botao1=''
ShellBot.InlineKeyboardButton --button 'botao1' --line 1 --text '‚è∞ CREAR USUARIO GR√ÅTIS DE 5 HORA ‚è∞' --callback_data 'gerarssh'
ShellBot.InlineKeyboardButton --button 'botao1' --line 2 --text 'üì• BAJAR APLICACION üì•' --callback_data 'appenviar'
ShellBot.InlineKeyboardButton --button 'botao1' --line 3 --text '‚úÖ COMPRAR USUARIO PREMIUM ‚úÖ' --callback_data '1' --url 't.me/MAICOLS' # LINK PV
ShellBot.InlineKeyboardButton --button 'botao1' --line 4 --text 'üÜò GRUPO SOPORTE MSC üÜò' --callback_data '2' --url 't.me/MSCPERU' # LINK PV
ShellBot.InlineKeyboardButton --button 'botao1' --line 5 --text 'üé¨ TUTORIAL COMO USAR üé¨' --callback_data 'bttuto1'
ShellBot.regHandleFunction --function criarteste --callback_data gerarssh
ShellBot.regHandleFunction --function criarteste2 --callback_data gerarssh2
ShellBot.regHandleFunction --function criarteste3 --callback_data gerarssh3
ShellBot.regHandleFunction --function enviarapp --callback_data appenviar
ShellBot.regHandleFunction --function tutorial1 --callback_data bttuto1
unset keyboard1
keyboard1="$(ShellBot.InlineKeyboardMarkup -b 'botao1')"
while :; do
   [[ "$(date +%d)" != "$(cat RESET)" ]] && {
    echo $(date +%d) > RESET
    echo ' ' > lista
   }
  ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 30
  for id in $(ShellBot.ListUpdates); do
    (
      ShellBot.watchHandle --callback_data ${callback_query_data[$id]}
      comando=(${message_text[$id]})
      [[ "${comando[0]}" = "/menu"  || "${comando[0]}" = "/start" ]] && menu
    ) &
  done
done
